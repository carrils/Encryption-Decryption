type: edu
custom_name: stage4
files:
- name: test/EncryptDecryptTest.java
  visible: false
  text: |
    import encryptdecrypt.Main;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testcase.TestCase;

    import java.util.List;

    public class EncryptDecryptTest extends StageTest<String> {
        public EncryptDecryptTest() {
            super(Main.class);
        }

        @Override
        public List<TestCase<String>> generate() {
            return List.of(
                new TestCase<String>()
                    .addArguments(
                        "-mode", "enc",
                        "-key", "5",
                        "-data", "Welcome to hyperskill!"
                    )
                    .setAttach("\\jqhtrj%yt%m~ujwxpnqq&"),

                new TestCase<String>()
                    .addArguments(
                        "-key", "0",
                        "-mode", "enc",
                        "-data", "Hello"
                    )
                    .setAttach("Hello"),

                new TestCase<String>()
                    .addArguments(
                        "-key", "1",
                        "-data", "012345678",
                        "-mode", "enc"
                    )
                    .setAttach("123456789"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-data", "\\jqhtrj%yt%m~ujwxpnqq&",
                        "-key", "5"
                    )
                    .setAttach("Welcome to hyperskill!"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-key", "0",
                        "-data", "Hi"
                    )
                    .setAttach("Hi"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-key", "1",
                        "-data", "222233334444"
                    )
                    .setAttach("111122223333")
            );
        }

        @Override
        public CheckResult check(String reply, String clue) {
            return new CheckResult(reply.trim().equals(clue.trim()));
        }
    }
  learner_created: false
- name: src/encryptdecrypt/Main.java
  visible: true
  text: |-
    /*
    Sam Carrillo
    7.11.2020
    --------------
    This is a program that encrypts a message
    "we found a treasure!"
    replacing each letter with the letter that
    is in the corresponding position from the end
    of the English alphabet
    (a→z, b→y, c→x, ... x→c, y →b, z→a)
     */
    package encryptdecrypt;

    import java.util.Scanner;

    public class Main {
        public static void main(String[] args) {
            Scanner input = new Scanner(System.in);
            String operation = input.nextLine();
            char[] chars = input.nextLine().toCharArray();
            int key = input.nextInt();

            if(operation.equals("enc")){
                System.out.println(encrypt(chars,key));
            }else if(operation.equals("dec")){
                System.out.println(decrypt(chars,key));
            }

        }

        public static String decrypt(char[]_chars, int _key){
            //method for decrypt
            char nullChar = 0;//beginning of base ASCII table
            char delChar = 127;//ending of base ASCII table
            int size = 128;
            String result = "";
            //for-each loop for decrypting chars array
            for(char item : _chars){
                char shiftItem = (char)(((item + nullChar - _key) % size) - nullChar);
                result += shiftItem;
            }
            return result;
        }

        public static String encrypt(char[] _chars, int _key){
            //method for encrypt
            char nullChar = 0; // \0
            char delChar = 127;// 007F
            int size = 128;
            String result = "";
            //for-each loop for encrypting chars array
            for (char item : _chars) {
                    char shiftItem = (char) (((item - nullChar + _key) % size) + nullChar);
                    result += shiftItem;
            }
            return result;
        }
    }
  learner_created: true
feedback_link: https://hyperskill.org/projects/46/stages/248/implement
status: Solved
feedback:
  message: Congratulations! Continue on <a href="https://hyperskill.org/projects/46/stages/248/implement">JetBrains
    Academy</a>
  time: Mon, 14 Sep 2020 01:46:20 UTC
record: 4
