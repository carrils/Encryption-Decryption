type: edu
custom_name: stage5
files:
- name: test/EncryptDecryptTest.java
  visible: false
  text: |
    import encryptdecrypt.Main;
    import org.hyperskill.hstest.common.FileUtils;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testcase.TestCase;

    import java.io.IOException;
    import java.nio.charset.StandardCharsets;
    import java.nio.file.Files;
    import java.nio.file.NoSuchFileException;
    import java.nio.file.Path;
    import java.nio.file.Paths;
    import java.util.List;

    public class EncryptDecryptTest extends StageTest<String> {
        public EncryptDecryptTest() {
            super(Main.class);
        }

        @Override
        public List<TestCase<String>> generate() {
            return List.of(
                new TestCase<String>()
                    .addArguments(
                        "-mode", "enc",
                        "-key", "5",
                        "-in", "in.txt",
                        "-out", "output.txt"
                    )
                    .setAttach("\\jqhtrj%yt%m~ujwxpnqq&")
                    .addFile("in.txt", "Welcome to hyperskill!"),

                new TestCase<String>()
                    .addArguments(
                        "-key", "0",
                        "-mode", "enc",
                        "-in", "input.txt",
                        "-out", "output.txt"
                    )
                    .setAttach("Hello")
                    .addFile("input.txt", "Hello"),

                new TestCase<String>()
                    .addArguments(
                        "-key", "1",
                        "-in", "i.txt",
                        "-out", "output.txt",
                        "-mode", "enc"
                    )
                    .setAttach("123456789")
                    .addFile("i.txt", "012345678"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-in", "input.txt",
                        "-out", "output.txt",
                        "-key", "5"
                    )
                    .setAttach("Welcome to hyperskill!")
                    .addFile("input.txt", "\\jqhtrj%yt%m~ujwxpnqq&"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-key", "0",
                        "-in", "input.txt",
                        "-out", "output.txt"
                    )
                    .setAttach("Hi")
                    .addFile("input.txt", "Hi"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-key", "1",
                        "-in", "input.txt",
                        "-out", "output.txt"
                    )
                    .setAttach("111122223333")
                    .addFile("input.txt", "222233334444")
            );
        }

        @Override
        public CheckResult check(String reply, String clue) {
            String fileName = "output.txt";
            String output;

            try {
                Path path = Paths.get(FileUtils.CURRENT_DIR + fileName);
                output = Files.readString(path, StandardCharsets.UTF_8);
            } catch (NoSuchFileException e) {
                return new CheckResult(false, "File output.txt not found!");
            } catch (IOException e) {
                return new CheckResult(false, "Cannot read from file!");
            }

            if (!output.trim().equals(clue.trim())) {
                return new CheckResult(false, "Wrong result in the file!");
            }

            return new CheckResult(true);
        }
    }
  learner_created: false
- name: src/encryptdecrypt/Main.java
  visible: true
  text: |-
    /*
    Sam Carrillo
    7.11.2020
    --------------
    This is a program that encrypts a message
    "we found a treasure!"
    replacing each letter with the letter that
    is in the corresponding position from the end
    of the English alphabet
    (a→z, b→y, c→x, ... x→c, y →b, z→a)
     */
    package encryptdecrypt;

    public class Main {
        public static void main(String[] args) {
            //set with default parameters per instructions
            String mode = "enc";
            int key = 0;
            char[] chars = {};//presume data is an empty string
            for (int i = 0; i < args.length - 1; i += 2) {
                if (args[i].equals("-mode")) {
                    mode = args[i + 1];
                } else if (args[i].equals("-key")) {
                    key = Integer.valueOf(args[i + 1]);
                } else if (args[i].equals("-data")) {
                    chars = args[i + 1].toCharArray();
                }
            }

            if (mode.equals("enc")) {
                System.out.println(encrypt(chars, key));
            } else if (mode.equals("dec")) {
                System.out.println(decrypt(chars, key));
            }

        }

        public static String decrypt(char[] _chars, int _key) {
            //method for decrypt
            char nullChar = 0;//beginning of base ASCII table
            char delChar = 127;//ending of base ASCII table
            int size = 128;
            String result = "";
            //for-each loop for decrypting chars array
            for (char item : _chars) {
                char shiftItem = (char) (((item + nullChar - _key) % size) - nullChar);
                result += shiftItem;
            }
            return result;
        }

        public static String encrypt(char[] _chars, int _key) {
            //method for encrypt
            char nullChar = 0; // \0
            char delChar = 127;// 007F
            int size = 128;
            String result = "";
            //for-each loop for encrypting chars array
            for (char item : _chars) {
                char shiftItem = (char) (((item - nullChar + _key) % size) + nullChar);
                result += shiftItem;
            }
            return result;
        }
    }
  learner_created: true
- name: output.txt
  visible: true
  learner_created: true
feedback_link: https://hyperskill.org/projects/46/stages/249/implement
status: Solved
feedback:
  message: Congratulations! Continue on <a href="https://hyperskill.org/projects/46/stages/249/implement">JetBrains
    Academy</a>
  time: Thu, 15 Oct 2020 02:32:20 UTC
record: -1
